Paolo Secci

1.
there are 2 bugs

2.
we fix the bugs by incrementing sorce and dest pointers by 4 instead of 1

3.
my strategy to finding the bugs is iterating over the code line by line while keeping track of the data segment table provided by MARS

4.
$t1 -or- $9

5.
$t2 -or- $10

6.
	la	$9, source
	la	$10, dest

7.
line 34,	$L6:

8.
Instruction:		addu	$8,$8,1Purpose:		increment $t0Corresponding C:	k++

Instruction:		sll	$3,$8,2Purpose:		points to address of next word in arrayCorresponding C:	k++ -or- (4 * address++)

Instruction:		addu	$5,$7,$9Purpose:		address pointing to source, save in $5Corresponding C:	$5 = source[k]

Instruction:		addu	$2,$3,$9Purpose:		address for source next available spot, save in $2Corresponding C:	$2 = source[k+1]

Instruction:		addu	$6,$7,$10Purpose:		address pointing to dest, save in $6Corresponding C:	$6 = dest[k]

Instruction:		lw	$4,0($2)Purpose:		point to next spot in sourceCorresponding C:	source[k++]

Instruction:		move	$7,$3Purpose:		store next position in array into $7Corresponding C:	k++

Instruction:		lw	$3,0($5)Purpose:		load word from source to $3Corresponding C:	$3 = source[k]

Instruction:		sw	$3,0($6)Purpose:		store word from $3 to destCorresponding C:	dest[k] = source[k];

Instruction:		bne	$4,$0,$L6Purpose:		check if $4 is zero to see if loop stopsCorresponding C:	if(source[k]!=0) {run loop}
